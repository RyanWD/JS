gitNotes:

Git commands (all without brackets)

git config --list // SHOWS ALL GITHUB INFORMATION , USER, CURRENT REPO ETC.

Pull latest repository files overwriting any local changes

git checkout -f (branch) - force checkout, discard local changes to current branch!!

git checkout -b crawler origin/crawler


git fetch --all
git reset --hard origin/master
git reset --hard origin/<branch_name> (if you're on a different branch) 

Sending files
Git add (file name)
Git commit -a (all files)
Git commit (-m 'message')
Git push 

Create seperate branch 
Git branch (name) // creates branch 
Git branch -a  //shows all branches + master 
Git checkout (name)  // switches to that branch
Git checkout -b (name) // creates branch and switches to that branch

Git branch -d (name) // deletes branch aslong as it's merged 
Git branch -D (name) // deletes without merge

Merging updates before pull request.
(eg below 'master' can be any branch, just main branch / feature is also random branch name)
1.Go to master branch with: git checkout master
2.Update your local master with: git pull origin master
Resolve conflicts (if applicable)
3.Go back to features with: git checkout features
4.Merge master branch over features with: git merge master
5.Push changes with: git push origin features

Now, you have to create a new pull request from features to master. Done!

Changing repository 
Open folder in editor
cd (repository name eg. JS or RyanWD.github.io)
Master branch is origin by default 

Creating new repository
On github create with readme file
Download/clone to local computer
git remote -v (shows origin repository)

Collaborating with others 
On master branch of working repository
git pull origin master // pulls all up to date files from remote repository onto your local pc
